{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","selectedGoods","clearItemSelection","setState","this","className","length","type","onClick","map","good","key","ClassNames","includes","filter","item","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sPAKMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WA6FaC,E,4MAzFbC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,mBAAqB,WACnB,EAAKC,SAAS,CAAEF,cAAe,M,4CAoBjC,WAAU,IAAD,OACCA,EAAkBG,KAAKJ,MAAvBC,cACR,OACE,yBAAKI,UAAU,OAEZJ,EAAcK,OAAS,EACnB,sCACGL,EADH,gBAED,4BACEM,KAAK,SACLC,QAAS,WACP,EAAKL,SAAS,CAAEF,cAAe,OAHnC,MASC,iDAEL,4BACGH,EAAgBW,KAAI,SAAAC,GAAI,OACvB,wBACEC,IAAKD,EAILL,UAAWO,IAAW,CAAE,SAAYX,EAAcY,SAASH,MAE1DA,EACA,KACCT,EAAcY,SAASH,GAarB,4BACEH,KAAK,SACLC,QAAS,WACP,EAAKL,UAAS,SAAAH,GAAK,MAAK,CACtBC,cAAeD,EAAMC,cAAca,QAAO,SAAAC,GAAI,OAAIA,IAASL,WAJjE,UAXA,4BACEH,KAAK,SACLC,QAAS,WACP,EAAKL,UAAS,SAAAH,GAAK,MAAK,CACtBC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BS,UAJ9C,iB,GA1DAM,IAAMC,WCdxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.279ad454.chunk.js","sourcesContent":["/* eslint-disable */\nimport React from 'react';\nimport ClassNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    selectedGoods: ['Jam'],\n  }\n\n  clearItemSelection = () => {\n    this.setState({ selectedGoods: [] });\n  }\n\n  //TODO разобрать и добавить (шапка сколько чего выбрано)\n  // setTitle = () => {\n  //   const products = [...this.state.selectedGoods];\n  //   const lastProduct = products[products.length - 1];\n\n  //   switch (products.length) {\n  //     case 0:\n  //       return `No goods selected`;\n  //     case 1:\n  //       return `${products[0]} is selected`;\n  //     default:\n  //       products.length -= 1;\n\n  //       return `${products.join(', ')} and ${lastProduct} are selected`;\n  //   }\n  // }\n\n  render() {\n    const { selectedGoods } = this.state;\n    return (\n      <div className=\"App\">\n\n        {selectedGoods.length > 0\n          ? (<h1>\n            {`${selectedGoods} is selected`}\n            <button\n              type=\"button\"\n              onClick={() => { //! кнопочка очищает список выбранных элементов\n                this.setState({ selectedGoods: [] })\n              }}\n            >\n              X\n            </button>\n          </h1>)\n          : (<h1>No goods selected</h1>)}\n        \n        <ul>\n          {goodsFromServer.map(good => (\n            <li\n              key={good}\n              //!если элемент в стейте содержит перебираемый элем, то даём ему класс с бекграундом\n              // className={selectedGoods.includes(good) \n              //   ? (\"selected\") : ('')}\n              className={ClassNames({ 'selected': selectedGoods.includes(good)})}\n            >\n              {good}\n              {'  '}\n              {!selectedGoods.includes(good)  //! если массив в стейте не содержит єлем-т, значит рендерим кнопку Add с функционалом, если нет - кнопку Remove\n                ? (\n                  <button\n                    type='button'\n                    onClick={() => {  //! добавляем элемент в стейт = пишем функцию здесь, потому что есть доступ к замыканию good\n                      this.setState(state => ({\n                        selectedGoods: [...state.selectedGoods, good],\n                      }))\n                    }}\n                  >\n                    Add\n                  </button>\n                ) : (\n                  <button\n                    type='button'\n                    onClick={() => {  //! удаляем элем из стейта, фильтруя массив - пишем функцию здесь, потому что есть доступ к замыканию good\n                      this.setState(state => ({\n                        selectedGoods: state.selectedGoods.filter(item => item !== good)\n                      }))\n                    }}\n                  >\n                    Remove\n                  </button>\n                )}\n              \n            </li>\n          ))}\n        </ul>\n      </div>\n    )\n  }\n};\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}